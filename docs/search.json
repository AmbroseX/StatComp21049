[{"path":[]},{"path":"/articles/homework.html","id":"question","dir":"Articles","previous_headings":"The homework 0 2021—09—16","what":"Question","title":"homework","text":"texts. 1st example figures. 2nd example tables. 3rd example","code":""},{"path":[]},{"path":"/articles/homework.html","id":"example-1","dir":"Articles","previous_headings":"The homework 0 2021—09—16","what":"Example 1","title":"homework","text":"1.italics斜体 txt apper italicized! 2.old加粗 txt apper italicized! 3.Headings 标题 ## secondary heading 二级标题 ### tertiary heading 小标题 4.Unordered Lists 无序数据列 - first item list - second item list - third item list 5.Ordered Lists 有序数据列 1. first item list 2. second item list 3. third item list 6.Links超链接 Johns Hopkin Bloomberg School Public Health Download R 7.Advanced Linking 超链接 spend much time reading [R bloggers][1] [Simply Statistics][2]! [1]: http://www.r-bloggers.com/ “R bloggers” [2]: http://simplystatistics.org/ “Simply Statistics” 8.Newlines 换行 换行需要在句尾加上双空格","code":"plot(1:5, 1:5, xlim = c(0,6), ylim = c (0,6), type = \"n\") text(x = 3, y = 3, labels = \"R for beginner\") plot(1:5, 1:5, xlim = c(0,6), ylim = c (0,6), type = \"n\") text(x = c(3, 3), y = c(5,3), labels = c(\"R for beginner\", \"It's easy to learn\"))"},{"path":"/articles/homework.html","id":"example-2","dir":"Articles","previous_headings":"The homework 0 2021—09—16","what":"Example 2","title":"homework","text":"type = “p”: 绘制点，默认值 type = “l”: 绘制线 type = “b”: 同时绘制点和线 type = “c”: 仅绘制参数“b”所示的线 type = “o”: 同时绘制点和线，且线穿过点 type = “h”: 绘制出点到横坐标轴的垂直线 type = “s”: 绘制出阶梯图（先横后纵） type = “S”: 绘制出阶梯图（先纵后竖） type = “n”: 作空图","code":"x<- c(1:6) y<- c(1:6) plot(x,y,main=\"test\",type=\"p\",xlim = c(0,7),ylim = c(0,7)) x<- c(1:6) y<- c(1:6) plot(x,y,main=\"test\",type=\"l\",xlim = c(0,7),ylim = c(0,7)) x<- c(1:6) y<- c(1:6) plot(x,y,main=\"test\",type=\"b\",xlim = c(0,7),ylim = c(0,7)) x<- c(1:6) y<- c(1:6) plot(x,y,main=\"test\",type=\"c\",xlim = c(0,7),ylim = c(0,7)) x<- c(1:6) y<- c(1:6) plot(x,y,main=\"test\",type=\"o\",xlim = c(0,7),ylim = c(0,7)) x<- c(1:6) y<- c(1:6) plot(x,y,main=\"test\",type=\"h\",xlim = c(0,7),ylim = c(0,7)) x<- c(1:6) y<- c(1:6) plot(x,y,main=\"test\",type=\"s\",xlim = c(0,7),ylim = c(0,7)) x<- c(1:6) y<- c(1:6) plot(x,y,main=\"test\",type=\"S\",xlim = c(0,7),ylim = c(0,7)) x<- c(1:6) y<- c(1:6) plot(x,y,main=\"test\",type=\"n\",xlim = c(0,7),ylim = c(0,7))"},{"path":"/articles/homework.html","id":"example-3","dir":"Articles","previous_headings":"The homework 0 2021—09—16","what":"Example 3","title":"homework","text":"绘制表格","code":"#>    y #> x   2 3 5 #>   1 1 0 0 #>   2 0 1 0 #>   3 0 0 1"},{"path":[]},{"path":"/articles/homework.html","id":"question-1","dir":"Articles","previous_headings":"The homework 1 2021-09-23","what":"Question","title":"homework","text":"Exercises 3.4, 3.11,3.20(page 94-96,Statistical Computating R).","code":""},{"path":[]},{"path":"/articles/homework.html","id":"section","dir":"Articles","previous_headings":"The homework 1 2021-09-23 > Answer","what":"3.4:","title":"homework","text":"Rayleigh density [156, Ch. 18] \\[ f(x)=\\frac{x}{\\sigma^{2}} e^{-x^{2} /\\left(2 \\sigma^{2}\\right)}, \\quad x \\geq 0, \\sigma>0 \\] Develop algorithm generate random samples Rayleigh(σ) distribution. Generate Rayleigh(σ) samples several choices σ > 0 check mode generated samples close theoretical mode σ (check histogram). 解： 取 \\(\\sigma=0.1\\)  取 \\(\\sigma=1\\)  取 \\(\\sigma=10\\) #### 3.11: Generate random sample size 1000 normal location mixture. components mixture \\(N(0, 1)\\) \\(N(3, 1)\\) distributions mixing probabilities \\(p_1\\) \\(p_2 = 1 − p_1\\). Graph histogram sample density superimposed, \\(p_1 = 0.75\\). Repeat different values \\(p_1\\) observe whether empirical distribution mixture appears bimodal. Make conjecture values p1 produce bimodal mixtures. 解：        所以\\(P\\(0.45-0.55)\\)左右时，会产生双峰分布","code":"rm(list=ls()) 0.1->sigma;1e5->n;k<-1;numeric(n)->x while (k<n) {   runif(1)->u   x[k]<-sqrt(2*log(1/u))*sigma; #骞夸箟鍧囧寑鍒嗗竷鍜屽崟浣嶅潎鍖€鍒嗗竷NAk+1->k } hist(x,prob=TRUE,main=expression(f(y)==x/(sigma^2)*exp(-x^2/(2*sigma^2)))) t<-seq(0,0.5,0.01) lines(t,t/(sigma^2)*exp(-t^2/(2*sigma^2))) rm(list=ls()) 1->sigma;1e5->n;k<-1;numeric(n)->x while (k<n) {   runif(1)->u   x[k]<-sqrt(2*log(1/u))*sigma; #骞夸箟鍧囧寑鍒嗗竷鍜屽崟浣嶅潎鍖€鍒嗗竷NAk <- k+1 } hist(x,prob=TRUE,main=expression(f(y)==x/(sigma^2)*exp(-x^2/(2*sigma^2)))) t<-seq(0,6,0.01) lines(t,t/(sigma^2)*exp(-t^2/(2*sigma^2))) rm(list=ls()) 10->sigma;1e5->n;k<-1;numeric(n)->x while (k<n) {   runif(1)->u   x[k]<-sqrt(2*log(1/u))*sigma; #骞夸箟鍧囧寑鍒嗗竷鍜屽崟浣嶅潎鍖€鍒嗗竷NAk <- k+1 } hist(x,prob=TRUE,main=expression(f(y)==x/(sigma^2)*exp(-x^2/(2*sigma^2)),sigma==1)) t<-seq(0,40,0.01) lines(t,t/(sigma^2)*exp(-t^2/(2*sigma^2))) rm(list=ls()) p<-0.75 n<-1e3; x1<-rnorm(n,0,1) x2<-rnorm(n,3,1) x<-numeric(n) k=1 while(k<n){   u<-runif(1)   if (u<=p) x[k]<-x1[k] else x[k]<-x2[k]   k+1->k } hist(x,prob=TRUE,main=expression(f(x)==p*x1+(1-p)*x2)) rm(list=ls()) p<-0.6 n<-1e3; x1<-rnorm(n,0,1) x2<-rnorm(n,3,1) x<-numeric(n) k=1 while(k<n){   u<-runif(1)   if (u<=p) x[k]<-x1[k] else x[k]<-x2[k]   k+1->k } hist(x,prob=TRUE,main=expression(f(x)==p*x1+(1-p)*x2)) rm(list=ls()) p<-0.55 n<-1e3 x1<-rnorm(n,0,1) x2<-rnorm(n,3,1) x<-numeric(n) k=1 while(k<n){   u<-runif(1)   if (u<=p) x[k]<-x1[k] else x[k]<-x2[k]   k+1->k } hist(x,prob=TRUE,main=expression(f(x)==p*x1+(1-p)*x2)) rm(list=ls()) p<-0.5 n<-1e4; x1<-rnorm(n,0,1) x2<-rnorm(n,3,1) x<-numeric(n) k=1 while(k<n){   u<-runif(1)   if (u<=p) x[k]<-x1[k] else x[k]<-x2[k]   k <- k+1 } hist(x,prob=TRUE,main=expression(f(x)==p*x1+(1-p)*x2)) rm(list=ls()) p<-0.45 n<-1e3; x1<-rnorm(n,0,1) x2<-rnorm(n,3,1) x<-numeric(n) k=1 while(k<n){   u<-runif(1)   if (u<=p) x[k]<-x1[k] else x[k]<-x2[k]   k <- k+1 } hist(x,prob=TRUE,main=expression(f(x)==p*x1+(1-p)*x2)) rm(list=ls()) p<-0.4 n<-1e3; x1<-rnorm(n,0,1) x2<-rnorm(n,3,1) x<-numeric(n) k=1 while(k<n){   u<-runif(1)   if (u<=p) x[k]<-x1[k] else x[k]<-x2[k]   k <- k+1 } hist(x,prob=TRUE,main=expression(f(x)==p*x1+(1-p)*x2)) rm(list=ls()) p<-0.35 n<-1e3; x1<-rnorm(n,0,1) x2<-rnorm(n,3,1) x<-numeric(n) k=1 while(k<n){   u<-runif(1)   if (u<=p) x[k]<-x1[k] else x[k]<-x2[k]   k <- k+1 } hist(x,prob=TRUE,main=expression(f(x)==p*x1+(1-p)*x2))"},{"path":"/articles/homework.html","id":"section-1","dir":"Articles","previous_headings":"The homework 1 2021-09-23 > Answer","what":"3.20:","title":"homework","text":"compound Poisson process stochastic process \\(\\{X(t), t ≥ 0\\}\\) can represented random sum \\(X(t) =\\sum_{=1}^{N(t)} Yi, t ≥ 0, \\{N(t), t ≥ 0\\}\\) Poisson process \\(Y_1, Y_2,...\\)\\(iid\\) independent \\(\\{N(t), t ≥ 0\\}.\\) Write program simulate compound \\(Poisson(λ)–Gamma \\ process (Y \\ \\ \\ Gamma\\  distribution)\\). Estimate mean variance \\(X(10)\\) several choices parameters compare theoretical values. Hint: Show \\(E[X(t)] = λtE[Y1]\\) \\(Var(X(t)) = λtE[Y_1^{2}]\\). 解：\\({Y_i}\\)是Gamma分布，\\(N(t)\\)是泊松过程 R, Gamma distribution parameters \\(shape = \\) \\(scale = s\\) density \\[f(x)= \\frac{1}{s^\\Gamma()} x^{-1} e^{-x/s},\\quad x\\geq 0, >0,s>0\\] can use “rgamma(n,shape=,scale=s)” generate n gamma random numbers. \\[E[X]=\\frac{\\alpha}{\\lambda}=, \\quad \\operatorname{Var}(X)=\\frac{\\alpha}{\\lambda^{2}}=^2 \\\\ (E[X])^2 = ^2s^2, \\quad E[X^2]= Var(X)+(E(X))^2=^2+^2s^2 \\] 泊松分布 \\[P(X=k)=\\frac{\\lambda^k}{k!}e^{-\\lambda},\\quad k=0,1,...\\] 泊松过程 \\[P(X(t)=k)=\\frac{(\\lambda t)^k}{k!}e^{-\\lambda t},\\quad k=0,1,...\\] can use “rpois(n,lambda)” generate n Poison random numbers. 1) Generate n Poison distribution random numbers. 2) Generate n Gamma distribution random numbers. 3) 根据泊松分布的值Np(t)，对Y的前Np项进行求和作为X(t)的值 画出\\(Poisson(\\lambda)-gamma\\ process\\)  (1)对\\(X(10)\\)进行模拟计算 理论计算值 \\[ E[X(t)]=\\lambda t E[Y_1]=10\\lambda /\\lambda_{gamma} \\\\ Var[x]=\\lambda t E[Y_1^2]=10\\lambda (+^2)/\\lambda_{gamma}^2 \\] (2)对\\(X(10)\\)进行模拟计算 理论计算值： \\[ E[X(t)]=\\lambda t E[Y_1]=10\\lambda /\\lambda_{gamma} \\\\ Var[x]=\\lambda t E[Y_1^2]=10\\lambda (+^2)/\\lambda_{gamma}^2 \\] (3)对\\(X(10)\\)进行模拟计算 理论计算值： \\[ E[X(t)]=\\lambda t E[Y_1]=10\\lambda /\\lambda_{gamma} \\\\ Var[x]=\\lambda t E[Y_1^2]=10\\lambda (+^2)/\\lambda_{gamma}^2 \\]","code":"rm(list=ls()) lambda.poison<-2 lambda.gamma<-1 a = 1 n<-1e3 Npoison<-numeric(n) k<-1 while(k<=n){   Npoison[k]<-rpois(1,lambda.poison*k)   k <- k+1 } maxp<- max(Npoison) Y<-rgamma(maxp,shape = a,scale =1/lambda.gamma) x<-numeric(n) k<-1 while(k<=n){   x[k]<-sum(Y[1:Npoison[k]])   k+1->k } plot(x) rm(list=ls()) lambda.poison<-2 lambda.gamma<-1 a = 1 t=10 n<-1e4 k<-1 x<-numeric(n) while(k<=n){   Npoison<-rpois(1,lambda.poison*t)   Y<-rgamma(Npoison,shape = a,scale =1/lambda.gamma)   x[k]<-sum(Y[1:Npoison])   k+1->k } paste('E[X(10)]=',mean(x)) #> [1] \"E[X(10)]= 20.0142887951994\" paste('Var(X(10)=',var(x)) #> [1] \"Var(X(10)= 40.6531397297022\" rm(list=ls()) lambda.poison<-2 lambda.gamma<-1 a = 1 Ex10<-10*lambda.poison*a/lambda.gamma Var10<-10*lambda.poison*(a+a^2)/lambda.gamma^2 paste(\"E[X(10)]=\",Ex10,\",Var[X(10)]=\",Var10) #> [1] \"E[X(10)]= 20 ,Var[X(10)]= 40\" rm(list=ls()) lambda.poison<-2 lambda.gamma<-2 a = 1 t=10 n<-1e4 k<-1 x<-numeric(n) while(k<=n){   Npoison<-rpois(1,lambda.poison*t)   Y<-rgamma(Npoison,shape = a,scale =1/lambda.gamma)   x[k]<-sum(Y[1:Npoison])   k+1->k } paste('E[X(10)]=',mean(x)) #> [1] \"E[X(10)]= 9.96981361906994\" paste('Var(X(10)=',var(x)) #> [1] \"Var(X(10)= 9.7125454270218\" rm(list=ls()) lambda.poison<-2 lambda.gamma<-2 a = 1 Ex10<-10*lambda.poison*a/lambda.gamma Var10<-10*lambda.poison*(a+a^2)/lambda.gamma^2 paste(\"E[X(10)]=\",Ex10,\",Var[X(10)]=\",Var10) #> [1] \"E[X(10)]= 10 ,Var[X(10)]= 10\" rm(list=ls()) lambda.poison<-5 lambda.gamma<-4 a = 2 t=10 n<-1e4 k<-1 x<-numeric(n) while(k<=n){   Npoison<-rpois(1,lambda.poison*t)   Y<-rgamma(Npoison,shape = a,scale =1/lambda.gamma)   x[k]<-sum(Y[1:Npoison])   k+1->k } paste('E[X(10)]=',mean(x),'Var(X(10)=',var(x)) #> [1] \"E[X(10)]= 25.0293035570458 Var(X(10)= 18.6239817231547\" rm(list=ls()) lambda.poison<-5 lambda.gamma<-4 a = 2 Ex10<-10*lambda.poison*a/lambda.gamma Var10<-10*lambda.poison*(a+a^2)/lambda.gamma^2 paste(\"E[X(10)]=\",Ex10,\",Var[X(10)]=\",Var10) #> [1] \"E[X(10)]= 25 ,Var[X(10)]= 18.75\""},{"path":[]},{"path":"/articles/homework.html","id":"question-2","dir":"Articles","previous_headings":"The homework 2 2021-09-30","what":"Question","title":"homework","text":"Exercises 5.4, 5.9, 5.13, 5.14 (pages 149-151, Statistical Computating R)","code":""},{"path":[]},{"path":"/articles/homework.html","id":"section-2","dir":"Articles","previous_headings":"The homework 2 2021-09-30 > Answer","what":"5.4","title":"homework","text":"Write function compute Monte Carlo estimate \\(\\operatorname{Beta}(3,3)\\) cdf, use function estimate \\(F(x)\\) \\(x=0.1,0.2, \\ldots, 0.9\\). Compare estimates values returned pbeta function \\(R\\). 解： \\(Beta(x;,b)\\)分布的概率密度函数为 \\[ f(x;,b)=\\frac{1}{B(,b)} x^{-1}(1-x)^{b-1} \\] Beta函数定义： \\[ B(,b)=\\int_{0}^{1} t^{-1}(1-t)^{b-1} d t \\] \\(pbeta\\)的定义： \\[pbeta(x,,b) =\\frac{1}{B(,b)} \\int _0^x t^{-1}(1-t)^{b-1}dt\\] \\[ B(3, 3)=\\int_{0}^{1} t^{2}(1-t)^{2} d t \\] 首先我们计算\\(B(3,3)\\)的积分估计 \\[ B(3,3)=\\int_{0}^{1} t^{2}(1-t)^{2} d t=E[t^2(1-t)^2] , \\quad t\\sim U(0,1) \\] 然后可以计算\\(pbeta(x,3,3)\\)的估计 \\[ pbeta(x,3,3) =\\frac{1}{B(3,3)} \\int _0^x t^{2}(1-t)^{2}dt = \\frac{x}{B(3,3)}E[t^2(1-t)^2],\\quad t\\sim U(0,x) \\] 编写求cdf的函数： 比较自定义函数和pbeta函数","code":"m<-1e4;x<-runif(m,min=0,max=1) theta.hat <- mean(x^2*(1-x)^2) result = matrix(0,1,2) result[1,1] = theta.hat result[1,2] = beta(3,3) rownames(result) = c(\"Beta(3,3)\") colnames(result) = c(\"Estimate\", \"Theoretical\") result #>             Estimate Theoretical #> Beta(3,3) 0.03297886  0.03333333 rm(list=ls())  pbetaCDF <- function(x,a,b) {   pbetax<-numeric(length(x))   m<-1e6;   y<-runif(m,min=0,max=1)   Beta_a_b <- mean(y^(a-1)*(1-y)^(b-1))   for(i in 1:length(x)){     n<-1e6;     y<-runif(n,min=0,max = x[i])     Beta_x <- x[i]*mean(y^(a-1)*(1-y)^(b-1))     pbetax[i] <- Beta_x/Beta_a_b     }   return(pbetax) } x<-seq(0.1,1,0.1) y<-pbetaCDF(x,3,3) print(y) #>  [1] 0.008567628 0.057876262 0.162753343 0.317613376 0.500172663 0.682377399 #>  [7] 0.837434527 0.942269025 0.990202036 1.000141510 x<-seq(0.1,1,0.1) result = matrix(0,3,length(x)) result[1,1:length(x)] = x result[2,1:length(x)] = pbetaCDF(x,3,3) result[3,1:length(x)] = pbeta(x,3,3) rownames(result) = c(\"x\",\"pbetaCDF(3,3)\",\"pbeta(x,3,3)\") colnames(result) = c(x) result #>                       0.1        0.2       0.3       0.4       0.5       0.6 #> x             0.100000000 0.20000000 0.3000000 0.4000000 0.5000000 0.6000000 #> pbetaCDF(3,3) 0.008565035 0.05790098 0.1630077 0.3172278 0.4994561 0.6820372 #> pbeta(x,3,3)  0.008560000 0.05792000 0.1630800 0.3174400 0.5000000 0.6825600 #>                    0.7       0.8       0.9        1 #> x             0.700000 0.8000000 0.9000000 1.000000 #> pbetaCDF(3,3) 0.836692 0.9410534 0.9911298 0.999953 #> pbeta(x,3,3)  0.836920 0.9420800 0.9914400 1.000000"},{"path":"/articles/homework.html","id":"section-3","dir":"Articles","previous_headings":"The homework 2 2021-09-30 > Answer","what":"5.9","title":"homework","text":"Rayleigh density \\([156,(18.76)]\\) \\[ f(x)=\\frac{x}{\\sigma^{2}} e^{-x^{2} /\\left(2 \\sigma^{2}\\right)}, \\quad x \\geq 0, \\sigma>0 \\] Implement function generate samples Rayleigh \\((\\sigma)\\) distribution, using antithetic variables. percent reduction variance \\(\\frac{X+X^{\\prime}}{2}\\) compared \\(\\frac{X_{1}+X_{2}}{2}\\) independent \\(X_{1}, X_{2} ?\\) 解： \\[ \\begin{align} & F(x) = \\int_0^x \\frac{t}{\\sigma^{2}} e^{-t^{2} /\\left(2 \\sigma^{2}\\right)}dt=1-e^{-x^2/{2\\sigma^2}} \\\\ & y=1-e^{-x^2/{2\\sigma^2}} \\\\ &\\Rightarrow x =\\sigma\\sqrt{-2ln(1-y)} \\\\ & \\Rightarrow x' =\\sigma\\sqrt{-2ln(y)} , \\quad y\\[0,1] \\end{align} \\] 因此方差 \\[ \\begin{align} E(X) &= \\sigma^2\\int_0^1 \\sqrt{-2ln(1-y)}dy=\\sqrt{\\frac{\\pi}{2}}\\sigma \\\\ E(X') &= \\sigma^2\\int_0^1 \\sqrt{-2ln(y)}dy=\\sqrt{\\frac{\\pi}{2}}\\sigma \\\\ Var(X) & = \\sigma^2\\int_0^1 (\\sqrt{-2ln(1-y)}-\\sqrt{\\frac{\\pi}{2}})^2dy = (2-\\frac{\\pi}{2})\\sigma^2\\\\ Var(X') &= \\sigma^2\\int_0^1 (\\sqrt{-2ln(y)}-\\sqrt{\\frac{\\pi}{2}})^2dy =(2-\\frac{\\pi}{2})\\sigma^2 \\\\ Cov(X,X') &= \\sigma^2 \\int_0^1 (\\sqrt{-2ln(1-y)}-\\sqrt{\\frac{\\pi}{2}})(\\sqrt{-2ln(y)}-\\sqrt{\\frac{\\pi}{2}})dy\\\\ Var(\\frac{X+X'}{2}) &= (Var(X)+Var({X'})+2Cov(X,X'))/4 \\\\ &=1-\\frac{\\pi}{4}+\\frac{1}{2}\\sigma^2 \\int_0^1 (\\sqrt{-2ln(1-y)}-\\sqrt{\\frac{\\pi}{2}})(\\sqrt{-2ln(y)}-\\sqrt{\\frac{\\pi}{2}})dy \\end{align} \\] 两个独立的随机变量的方差 \\[ \\begin{align} Cov(X_1,X_2) &= 0 \\\\ Var(X_1) &= Var(X_2)=\\sigma^2\\int_0^1 (\\sqrt{-2ln(1-y)}-\\sqrt{\\frac{\\pi}{2}})^2dy = (2-\\frac{\\pi}{2})\\sigma^2\\\\ \\\\ Var(\\frac{X_1+X_2}{2}) &=(Var(X_1)+Var(X_2))/4 = 1-\\frac{\\pi}{4}  \\\\ \\end{align} \\] 因此方差减小的百分比为 \\[ \\begin{align} Percent \\ reduction &=\\frac{(Var_x-Var_{x'})}{Var_x}\\times 100\\%  \\\\ &=\\frac{2}{\\pi-4}\\int_0^1 (\\sqrt{-2ln(1-y)}-\\sqrt{\\frac{\\pi}{2}})(\\sqrt{-2ln(y)}-\\sqrt{\\frac{\\pi}{2}})dy \\times 100\\% \\\\ \\end{align} \\] (1)求协方差积分 \\[ \\frac{1}{\\sigma^2}Cov(X,X') = \\int_0^1 (\\sqrt{-2ln(1-y)}-\\sqrt{\\frac{\\pi}{2}})(\\sqrt{-2ln(y)}-\\sqrt{\\frac{\\pi}{2}})dy \\] (2)因此\\(X,X'\\)是负相关的 我们可以模拟计算理论上方差减小百分比 (3)实验上方差减小百分比","code":"rm(list=ls()) m<-1e5;y<-runif(m) covx12 <- mean((sqrt(-2*log(y))-sqrt(pi/2))*(sqrt(-2*log(1-y))-sqrt(pi/2))) paste(\"Cov(X,X') = \",covx12) rm(list=ls()) m<-1e5;y<-runif(m) covx12 <- mean((sqrt(-2*log(y))-sqrt(pi/2))*(sqrt(-2*log(1-y))-sqrt(pi/2)))  result <-matrix(0,5,1) result[1,1] <- 2-pi/2 result[2,1] <- covx12 result[3,1] <- 1-pi/4+1/2*covx12 result[4,1] <- 1-pi/4 result[5,1] <- paste(\"Percent reduction = \",2/(pi-4)*covx12*100,\"%\") rownames(result) = c(\"Var(X) = \",\"Cov(X,X') = \",\"Var((X+X')/2) =\",\"Var((X1+X2)/2) =\",\"Percent reduction = \") colnames(result) = c(\"理论计算值\") result rm(list=ls()) m<-1e5;y<-runif(m) y1<-y[1:m/2] x1<-sqrt(-2*log(1-y1)) x2<-sqrt(-2*log(y1)) covx12<-mean((x1-mean(x1))*(x2-mean(x2))) u1<-(x1+x2)/2 var12 <- var(u1) x3<-sqrt(-2*log(runif(m/2))) x4<-sqrt(-2*log(runif(m/2))) var12in <-var((x3+x4)/2) result <-matrix(0,6,1) result[1,1] <- var(x1) result[2,1] <- var(x2) result[3,1] <- covx12 result[4,1] <- var12 result[5,1] <- var12in result[6,1] <- paste((var12in-var12)/var12in*100,\"%\") rownames(result) = c(\"Var(X) = \",\"Var(X') = \",\"Cov(X,X') = \",\"Var((X+X')/2) =\",\"Var((X1+X2)/2) =\",\"Percent reduction = \") colnames(result) = c(\"  MC模拟计算值\") result"},{"path":"/articles/homework.html","id":"section-4","dir":"Articles","previous_headings":"The homework 2 2021-09-30 > Answer","what":"5.13","title":"homework","text":"Find two importance functions \\(f_{1}\\) \\(f_{2}\\) supported \\((1, \\infty)\\) ‘close’ \\[ g(x)=\\frac{x^{2}}{\\sqrt{2 \\pi}} e^{-x^{2} / 2}, \\quad x>1 \\] two importance functions produce smaller variance estimating \\[ \\int_{1}^{\\infty} \\frac{x^{2}}{\\sqrt{2 \\pi}} e^{-x^{2} / 2} d x \\] importance sampling? Explain. 解 \\[ \\begin{align} \\hat{\\theta} &=\\int_{1}^{\\infty} \\frac{x^{2}}{\\sqrt{2 \\pi}} e^{-x^{2} / 2} d x \\\\ & = \\int_{1}^{\\infty} \\frac{g(x)}{f(x)}f(x)d x \\\\ & = \\frac{1}{m} \\sum_{=1}^m \\frac{g(x_i)}{f(x_i)} \\end{align} \\] 取 \\[ \\begin{align} & let \\quad f_1(x) =2exe^{-x^2} ,\\quad f_2(x)=e^{-x+1} \\\\ & F_1(x)=1-e^{1-x^2},F_2(x)=1-e^{1-x}\\\\ & \\frac{g(x)}{f_1(x)} = \\frac{x}{2e\\sqrt{2\\pi}}e^{x^2/2} \\\\ & \\frac{g(x)}{f_2(x)} = \\frac{x^2}{\\sqrt{2\\pi}}e^{x-x^2/2-1}\\\\ &y_1=F_1(x_1) \\Rightarrow x_1= \\sqrt{1-ln(1-y_1)}=\\sqrt{1-ln(y_1)}\\\\ &y_2=F_2(x_2) \\Rightarrow x_2= 1-ln(1-y_2)=1-ln(y_2) \\end{align} \\] ‘est’ \\(\\hat{\\theta}\\) ‘sd’ standard deviation \\(\\frac{g(Xi )}{f (Xi )}\\) instead \\(\\hat{\\theta}\\) \\(f_2(x)=e^{-x+1}\\) produce smaller variance estimating.","code":"rm(list=ls()) m<-1e5 y<-runif(m,min=0,max=1) x1<-sqrt(1-log(y)) x2<-1-log(y) f1<-x1/(2*exp(1)*sqrt(2*pi))*exp((x1^2)/2) f2<-x2^2/(sqrt(2*pi))*exp(x2-(x2^2)/2-1) result = matrix(0,2,2) result[1,1] = mean(f1) result[1,2] = mean(f1) result[2,1] = sd(f1) result[2,2] = sd(f2) rownames(result) = c(\"est\",\"sd\") colnames(result) = c(\"f1(x)\",\"f2(x)\") result #>         f1(x)     f2(x) #> est 0.3959364 0.3959364 #> sd  1.2605932 0.1568908"},{"path":"/articles/homework.html","id":"section-5","dir":"Articles","previous_headings":"The homework 2 2021-09-30 > Answer","what":"5.14","title":"homework","text":"Obtain Monte Carlo estimate \\[ \\int_{1}^{\\infty} \\frac{x^{2}}{\\sqrt{2 \\pi}} e^{-x^{2} / 2} d x \\] importance sampling. 解： 和5.13中的方法一样，选取\\(f_2(x)=e^{-x+1}\\) \\[ \\begin{align} & F(x)=1-e^{1-x}\\\\ & \\frac{g(x)}{f(x)} = \\frac{x^2}{\\sqrt{2\\pi}}e^{x-x^2/2-1}\\\\ &y=F(x_2) \\Rightarrow x= 1-ln(1-y)=1-ln(y) \\end{align} \\]","code":"rm(list=ls()) m<-1e5 y<-runif(m,min=0,max=1) x<-1-log(y) f<-x^2/(sqrt(2*pi))*exp(x-(x^2)/2-1) result = matrix(0,2,1) result[1,1] = mean(f) result[2,1] = sd(f) rownames(result) = c(\"est\",\"sd\") colnames(result) = c(\"f1(x)\") result paste(\"积分估计值 theta.hat = \",mean(f))"},{"path":[]},{"path":"/articles/homework.html","id":"question-3","dir":"Articles","previous_headings":"The homework 3 2021-10-14","what":"Question","title":"homework","text":"Exercises 6.5 6.(page 180-181, Statistical Computating R).","code":""},{"path":[]},{"path":"/articles/homework.html","id":"section-6","dir":"Articles","previous_headings":"The homework 3 2021-10-14 > Answer","what":"6.5","title":"homework","text":"Suppose \\(95\\%\\) symmetric t-interval applied estimate mean, sample data non-normal. probability confidence interval covers mean necessarily equal 0.95. Use Monte Carlo experiment estimate coverage probability t-interval random samples \\(\\chi^2_{2}\\) data sample size n = 20. Compare t-interval results simulation results Example 6.4. (t-interval robust departures normality interval variance.) 解: 卡方分布密度 \\[ \\begin{align} \\chi^2_n(x) &= \\frac{1}{2^{n/2}\\Gamma(n/2)} x^{n/2-1} e^{-x/2} ,\\quad x>0 \\\\ E[X]  & = n , \\quad Var(X) = 2n \\\\ Z_1 \\sim \\chi^2_{n1},&Z_2 \\sim \\chi^2_{n2} \\Rightarrow Z_1+Z_2 \\sim \\chi^2_{n_1+n_2} \\end{align} \\] \\[ \\begin{align} &\\quad X \\sim N(0,1),Y_i \\sim \\chi_n^2 \\quad \\quad X,Y_i \\quad independent \\\\ &\\Rightarrow T=\\frac{X}{\\sqrt{Y_i/n}} \\sim t_n \\\\ &\\Rightarrow  \\sum_{=1}^m Y_i \\sim \\chi_{m*n}^2 \\\\ &\\Rightarrow T=\\frac{X}{\\sqrt{\\sum_{=1}^m Y_i/(n*m)}} \\sim t_{n*m} \\\\ &\\Rightarrow T=\\frac{X}{\\sqrt{\\bar{Y}/n}} \\sim t_{n*m} \\\\ \\end{align} \\] \\[ \\begin{align} x_1,x_2,...x_n \\sim N(0,1) \\\\ T = \\frac{\\bar{X}-\\mu}{S_n/\\sqrt{n}} \\sim t_{n-1} \\end{align} \\] MC实验 t-interval 包含了均值\\(\\mu = 2\\) two sides \\(100(1−\\alpha)\\%\\) confidence interval variance given \\(\\mu+\\frac{S_n}{\\sqrt{n}}t_{n-1}(\\alpha/2),\\mu+\\frac{S_n}{\\sqrt{n}}t_{n-1}(1-\\alpha/2)\\)","code":"rm(list = ls()) m <- 20 n <- 2 alpha <- 0.05 Y <- rchisq(m,n) a<-t.test(Y,conf.level = 1-alpha) paste('鍧囧€肩殑 95%t-interval:'NAaNA[NA4NA]NA)NA#> [1] \"鍧囧€肩殑 95%t-interval: c(1.53538891003312, 3.65882306089678)\"NAUCL <- (m-1)*var(Y)/qchisq(alpha,df=m-1) paste('upper confidence limits UCL =',UCL) #> [1] \"upper confidence limits UCL = 9.66496867781\" rm(list= ls()) m <- 20 n <- 2 alpha <- .05 mu0 = n x <- rchisq(m, df = n) LCL <- mu0+var(x)*qt(alpha/2, df = m-1)/sqrt(m) UCL <- mu0+var(x)*qt(1-alpha/2, df = m-1)/sqrt(m) paste('鍧囧€肩殑 95%t-interval:[',LCLC',']UCLNA']'NA)NA#> [1] \"鍧囧€肩殑 95%t-interval:[ 0.761043092348883 , 3.23895690765112 ]\"NA"},{"path":"/articles/homework.html","id":"a","dir":"Articles","previous_headings":"The homework 3 2021-10-14 > Answer","what":"6.A","title":"homework","text":"Use Monte Carlo simulation investigate whether empirical Type error rate t-test approximately equal nominal significance level \\(\\alpha\\), sampled population non-normal. t-test robust mild departures normality. Discuss simulation results cases sampled population () \\(\\chi^2_{1}\\) (ii) Uniform(0,2) (iii) Exponential(rate=1). case, test \\(H_0 : \\mu = \\mu_0 \\quad vs \\quad H_1 : \\mu \\neq \\mu_0\\), \\(\\mu_0\\) mean \\(\\chi^2_{1}\\), Uniform(0,2), Exponential(1), respectively. 解: 单样本t检验，适用于样本均值与总体均值的比较，是检验样本均值所代表的的总体均值是否与理论值有差别 型错误率是\\(H_0\\)正确，但是推翻\\(H_0\\)接受\\(H_1\\)的概率是\\(\\alpha\\) \\(E[\\chi_1^2] = E[u(0,2)] =E[E(1))]= 1\\) 则检验问题变成 \\(H_0 : \\mu = 1 \\quad vs \\quad H_1 : \\mu \\neq 1\\) \\(t1e = \\frac{1}{m}\\sum_{j=1}^m (p_j \\leq \\alpha)\\) \\(T^* = \\frac{\\bar{X}-\\mu_0}{S/\\sqrt{n}} \\sim t(n-1)\\) (1) 观察到的 t1e = 0.051, 估计值的标准误差是 \\(\\hat{se}(\\hat{p}) = 0.0022\\) \\(t1e > \\alpha\\),但是在一个标准误差范围内，理论上讲,当\\(\\mu =1\\)时,拒绝空假设的概率正好是 \\(\\alpha\\) 模拟从经验上调查，t.test中的p值计算方法是否与理论值\\(\\alpha\\)相一致 实验上发现，t1e和取的样本大小有关，越大和\\(\\alpha\\)越接近，而越小，偏离越远  观察到的 t1e = 0.0476, 估计值的标准误差是 \\(\\hat{se}(\\hat{p}) = 0.0021\\) \\(t1e > \\alpha\\),但是在一个标准误差范围内，理论上讲,当\\(\\mu =1\\)时,拒绝空假设的概率正好是 \\(\\alpha\\) 模拟从经验上调查，t.test中的p值计算方法是否与理论值\\(\\alpha\\)相一致 (3) 观察到的 t1e = 0.0557, 估计值的标准误差是 \\(\\hat{se}(\\hat{p}) = 0.00229\\) \\(t1e > \\alpha\\),但是在一个标准误差范围内，理论上讲,当\\(\\mu =1\\)时,拒绝空假设的概率正好是 \\(\\alpha\\) 模拟从经验上调查，t.test中的p值计算方法是否与理论值\\(\\alpha\\)相一致","code":"rm(list=ls()) m <- 1e4 ##瀹為獙娆℃暟NAn <- 1e3 ##姣忔瀹為獙鐨勬牱鏈暟NAalpha <- 0.05 mu0 <- 1  p <- numeric(m)  #瀛樺偍 p-valuesNAfor (j in 1:m){   x <- rchisq(n,df = 1)   ttest <- t.test(x,alternative = \"two.sided\",mu = mu0,conf.level =1- alpha)   p[j] <- ttest$p.value } p.hat <- mean(p < alpha) se.hat <- sqrt(p.hat * (1 - p.hat) / m) print(c(p.hat, se.hat)) rm(list=ls()) m <- 1e3 ##瀹為獙娆℃暟NAn <- c(1e1,1e2,5*1e2,1e3,5*1e3,1e4,2*1e4,3*1e4,4*1e4,5*1e4,6*1e4,1e5) ##姣忔瀹為獙鐨勬牱鏈暟NAalpha <- 0.05 mu0 <- 1 p.hat <- numeric(length(n)) se.hat <- numeric(length(n))  for (i in 1:length(n)){   p <- numeric(m)  #瀛樺偍 p-valuesNAfor (j in 1:m){     k <- n[i]     x <- rchisq(k,df = 1)     ttest <- t.test(x,alternative = \"two.sided\",mu = mu0,conf.level =1- alpha)     p[j] <- ttest$p.value }   p.hat[i] <- mean(p < alpha)   se.hat[i] <- sqrt(p.hat[i] * (1 - p.hat[i]) / m) } plot(n,p.hat/alpha) rm(list=ls()) m <- 1e4 ##瀹為獙娆℃暟NAn <- 1e3 ##姣忔瀹為獙鐨勬牱鏈暟NAalpha <- 0.05 mu0 <- 1  p <- numeric(m)  #瀛樺偍 p-valuesNAfor (j in 1:m){   x <- runif(n,0,2)   ttest <- t.test(x,alternative = \"two.sided\",mu = mu0,conf.level =1- alpha)   p[j] <- ttest$p.value } p.hat <- mean(p < alpha) se.hat <- sqrt(p.hat * (1 - p.hat) / m) print(c(p.hat, se.hat)) rm(list=ls()) m <- 1e4 ##瀹為獙娆℃暟NAn <- 1e3 ##姣忔瀹為獙鐨勬牱鏈暟NAalpha <- 0.05 mu0 <- 1  p <- numeric(m)  #瀛樺偍 p-valuesNAfor (j in 1:m){   x <- rexp(n,rate =1)   ttest <- t.test(x,alternative = \"two.sided\",mu = mu0,conf.level =1- alpha)   p[j] <- ttest$p.value } p.hat <- mean(p < alpha) se.hat <- sqrt(p.hat * (1 - p.hat) / m) print(c(p.hat, se.hat))"},{"path":"/articles/homework.html","id":"supplement","dir":"Articles","previous_headings":"The homework 3 2021-10-14 > Answer","what":"Supplement","title":"homework","text":"obtain powers two methods particular simulation setting 10,000 experiments: say, 0.651 one method 0.676 another method. want know powers different 0.05 level. (1)corresponding hypothesis test problem? (2)test use? Z-test, two-sample t-test, paired-t test McNemar test? ? (3)Please provide least necessary information hypothesis testing. 解:检验的Power:\\(\\pi(\\theta)=1-\\beta\\)是在知道参数真值为\\(\\theta\\)时,拒绝\\(H_0\\)的概率,II型错误率是\\(1-\\pi(\\theta)\\)功效分析是在知道：显著性水平，功效，效应值，样本大小,三者中任意三个值，求另一个值 (1) \\(H_0: 方法1和方法2的power相同 \\leftrightarrow H_{\\alpha}:方法1和方法2的power不同 \\neq 0\\) (2) McNemar,用来比较两种方法是否有显著性差异 \\(\\tau_{\\chi^2}=\\frac{(|Power_1-Power_2|-1)^2}{Power_1+Power_2} \\sim \\chi_1^2\\) 因此 0.7163715<3.8414588 不能拒绝零假设 (3)need another information hypothesis testing. 1)需要知道自由度为1的卡方分布的 \\(100(1-\\alpha)\\%\\)分位数 是3.8414","code":"p1 <- 0.651 p2 <- 0.676 alpha <- 0.05 tau <- (abs(p1-p2)-1)^2/(p1+p2) xi <- qchisq(1-alpha,df =1) print(c(tau,xi))"},{"path":[]},{"path":"/articles/homework.html","id":"question-4","dir":"Articles","previous_headings":"The homework 5 2021-10-28","what":"Question","title":"homework","text":"Exercises 7.7, 7.8, 7.9, 7.B (pages 213, Statistical Computating R)","code":""},{"path":[]},{"path":"/articles/homework.html","id":"section-7","dir":"Articles","previous_headings":"The homework 5 2021-10-28 > Answer","what":"7.7","title":"homework","text":"Refer Exercise 7.6. Efron Tibshirani discuss following example [84, Ch. 7]. five-dimensional scores data \\(5 \\times 5\\) covariance matrix \\(\\Sigma\\), positive eigenvalues \\(\\lambda_{1}>\\cdots>\\lambda_{5} .\\) principal components analysis, \\[ \\theta=\\frac{\\lambda_{1}}{\\sum_{j=1}^{5} \\lambda_{j}} \\] measures proportion variance explained first principal component. Let \\(\\hat{\\lambda}_{1}>\\cdots>\\hat{\\lambda}_{5}\\) eigenvalues \\(\\hat{\\Sigma}\\), \\(\\hat{\\Sigma}\\) \\(\\mathrm{MLE}\\) \\(\\Sigma\\). Compute sample estimate \\[ \\hat{\\theta}=\\frac{\\hat{\\lambda}_{1}}{\\sum_{j=1}^{5} \\hat{\\lambda}_{j}} \\] \\(\\theta\\). Use bootstrap estimate bias standard error \\(\\hat{\\theta}\\).","code":""},{"path":"/articles/homework.html","id":"solution","dir":"Articles","previous_headings":"The homework 5 2021-10-28 > Answer","what":"Solution","title":"homework","text":"","code":"rm(list = ls()) library(knitr) library(bootstrap) #for the law data  score <- matrix(0,length(scor$mec),5)  # 88*5 score[,1] <- scor$mec score[,2] <- scor$vec score[,3] <- scor$alg score[,4] <- scor$ana score[,5] <- scor$sta  n <- length(scor$mec) xigma.hat <- cov(score) xigma.ev <-eigen(xigma.hat) xigma.lambda <- xigma.ev$values theta.hat <- xigma.lambda[1]/sum(xigma.lambda)  B <- 5000 theta.b <-numeric(B) for (b in 1:B){   i<- sample(1:n,size = n,replace = TRUE)   xigma0.hat <- cov(score[i,])   xigma0.ev <- eigen(xigma0.hat)   xigma0.lambda <- xigma0.ev$values   theta.b[b] <- xigma0.lambda[1]/sum(xigma0.lambda) } bias <- mean(theta.b)-theta.hat se.theta <- B/(B-1)*var(theta.b) boot.theta.hat <- mean(theta.b) standard.error <- sqrt(se.theta)  result <- cbind(theta.hat, boot.theta.hat, bias,standard.error)#合并计算结果 dimnames(result)[[2]] <- c(\"theta\", \"Bootstrap theta.hat\", \"bias\", \"standard error\")#重命名各列 kable(result, caption = \"表1：用bootstrap估计theta.hat的bias和standard error\") #利用kable绘制计算结"},{"path":"/articles/homework.html","id":"section-8","dir":"Articles","previous_headings":"The homework 5 2021-10-28 > Answer","what":"7.8","title":"homework","text":"Refer Exercise 7.7. Obtain jackknife estimates bias standard error \\(\\hat{\\theta}\\).","code":""},{"path":"/articles/homework.html","id":"solution-1","dir":"Articles","previous_headings":"The homework 5 2021-10-28 > Answer","what":"Solution","title":"homework","text":"","code":"rm(list = ls()) library(bootstrap) #for the law data library(knitr)  score <- matrix(0,length(scor$mec),5)  # 88*5 score[,1] <- scor$mec score[,2] <- scor$vec score[,3] <- scor$alg score[,4] <- scor$ana score[,5] <- scor$sta  n <- length(scor$mec) xigma.hat <- cov(score) xigma.ev <-eigen(xigma.hat) xigma.lambda <- xigma.ev$values theta.hat <- xigma.lambda[1]/sum(xigma.lambda)  theta.jack <-numeric(n)  for (i in 1:n){   xigma0.hat <- cov(score[-i,])  #Jackknife   xigma0.ev <- eigen(xigma0.hat)   xigma0.lambda <- xigma0.ev$values   theta.jack[i] <- xigma0.lambda[1]/sum(xigma0.lambda) } bias.jack <- (n-1)*(mean(theta.jack)-theta.hat) bias.se <- sqrt((n-1)*mean(theta.jack-mean(theta.jack))^2)   jack.theta.hat <- mean(theta.jack) standard.error <- sd(theta.jack)  result <- cbind(theta.hat, jack.theta.hat, bias.jack,standard.error)#合并计算结果 dimnames(result)[[2]] <- c(\"theta\", \"Jackknife theta.hat\", \"bias\", \"standard error\")#重命名各列 kable(result, caption = \"表2：用Jackknife估计theta.hat的bias和standard error\") #利用kable绘制计算结"},{"path":"/articles/homework.html","id":"section-9","dir":"Articles","previous_headings":"The homework 5 2021-10-28 > Answer","what":"7.9","title":"homework","text":"Refer Exercise 7.7. Compute 95% percentile BCa confidence intervals \\(\\hat{\\theta}\\). #### Solution","code":"rm(list = ls()) library(knitr) library(bootstrap) #for the law data level <- 0.95  boot.se <- function(X,R,f){   #local function to compute the bootstrap   #estimate of standard error for statistic f(x)   x <- as.matrix(x); m <- nrow(x)   th <- replicate(R, expr = {   i <- sample(1:m, size = m, replace = TRUE)   f(x[i, ])   })   return(sd(th)) }  score <- matrix(0,length(scor$mec),5)  # 88*5 score[,1] <- scor$mec score[,2] <- scor$vec score[,3] <- scor$alg score[,4] <- scor$ana score[,5] <- scor$sta  n <- length(scor$mec) xigma.hat <- cov(score) xigma.ev <-eigen(xigma.hat) xigma.lambda <- xigma.ev$values theta.hat <- xigma.lambda[1]/sum(xigma.lambda)  B <- 5000  #璁＄畻bootstrp鐨勬鏁NAR <- 100 ##璁＄畻鏍囧噯宸殑娆℃暟NAtheta.b <-numeric(B) se <- numeric(B)  statistic <-function(x){   xigma0.hat <- cov(x)   xigma0.ev <- eigen(xigma0.hat)   xigma0.lambda <- xigma0.ev$values   return(xigma0.lambda[1]/sum(xigma0.lambda))  }  for (b in 1:B){   i<- sample(1:n,size = n,replace = TRUE)   boostrapscore <- score[i,]   xigma0.hat <- cov(boostrapscore)      th <- replicate(R,expr={     j<- sample(1:n,size = n,replace = TRUE)     statistic(boostrapscore[j,])   })   xigma0.ev <- eigen(xigma0.hat)   xigma0.lambda <- xigma0.ev$values   theta.b[b] <- xigma0.lambda[1]/sum(xigma0.lambda)   se[b] <- sd(th) }   bias <- mean(theta.b)-theta.hat se.theta <- B/(B-1)*var(theta.b) boot.theta.hat <- mean(theta.b) standard.error <- sqrt(se.theta)  stat0 <- statistic(score) stat <- theta.b se0 <- sd(stat) t.stats <- (stat-stat0)/se alpha <- 1-level  Qt <- quantile(t.stats,c(alpha/2,1-alpha/2),type=1) names(Qt) <- rev(names(Qt)) CI <- rev(stat0-Qt*se0) CI"},{"path":"/articles/homework.html","id":"b","dir":"Articles","previous_headings":"The homework 5 2021-10-28 > Answer","what":"7.B","title":"homework","text":"Repeat Project 7.sample skewness statistic. Compare coverage rates normal populations (skewness 0) \\(\\chi^2_5\\) distributions (positive skewness).","code":""},{"path":"/articles/homework.html","id":"solution-2","dir":"Articles","previous_headings":"The homework 5 2021-10-28 > Answer","what":"Solution","title":"homework","text":"","code":"rm(list = ls()) n <- 1000  #鏍锋湰鏁伴噺NAalpha <- 0.05 B <- 200  #bootstrap 娆℃暟NAsk <- function(xs) {      # 璁＄畻缁熻鍊NAsample.skewness <- function (sample) {     mu <- mean(sample)     n <- length(sample)     num <- 1/n * sum(sapply(sample, function (x) (x - mu)^3))     denom <- sd(sample)^3     return (num/denom)   }      theta.hat <- sample.skewness(xs)         theta.hat.b <- numeric(B)      for (b in 1:B) {     i <- sample(1:n, n, TRUE)     xs.b <- xs[i]     theta.hat.b[b] <- sample.skewness(xs.b)   }      sd.hat <- sd(theta.hat.b)      # 鍙鍖<96>NApar(mfrow = c(1, 1))   hist(theta.hat.b)      # 缃俊鍖洪棿NAprobs <- c(alpha/2, 1-alpha/2)   names <- sapply(probs, function(p) paste(p*100, '%', sep <- ''))   qs.theta.hat.b <- quantile(theta.hat.b, probs)      # 鏍囧噯姝ｆ€佸尯闂NAqs.norm <- qnorm(probs)   ci.norm <- rev(theta.hat - qs.norm * sd.hat)      # 鍩烘湰 bootstrap鍖洪棿NAci.basic <- rev(2*theta.hat - qs.theta.hat.b)      # percentile.   ci.percentile <- qs.theta.hat.b      ci.data <- data.frame(rbind(ci.norm, ci.basic, ci.percentile))   colnames(ci.data) <- names   ci.data['left.miss'] <- 0   ci.data['right.miss'] <- 0      # MC study.   rep <- 1000      for (r in 1:rep) {     i <- sample(1:n, n, replace = TRUE)     skew <- sample.skewness(xs[i])     for (y in 1:nrow(ci.data)) {       lower <- ci.data[y,names[1]]       upper <- ci.data[y,names[2]]       if (skew < lower) {         ci.data[y,'left.miss'] <- ci.data[y,'left.miss'] + 1       } else if (skew > upper) {         ci.data[y,'right.miss'] <- ci.data[y,'right.miss'] + 1       }     }   }      ci.data$left.miss <- ci.data$left.miss/rep   ci.data$right.miss <- ci.data$right.miss/rep      return(ci.data) }  df <- 5 x1 <- rchisq(n, df = df) sk(x1)  sd <- sd(x1) mux <- mean(x1) x2 <- rnorm(n, mean = mux, sd = sd)  sk(x2)"},{"path":[]},{"path":"/articles/homework.html","id":"question-5","dir":"Articles","previous_headings":"The homework 7 2021-11-11","what":"Question","title":"homework","text":"Exercies 9.3 9.8 (pages 277-278, Statistical Computating R)","code":""},{"path":[]},{"path":"/articles/homework.html","id":"section-10","dir":"Articles","previous_headings":"The homework 7 2021-11-11 > Answer","what":"9.3","title":"homework","text":"Use Metropolis-Hastings sampler generate random variables standard Cauchy distribution. Discard first 1000 chain, compare deciles generated observations deciles standard Cauchy distribution (see qcauchy qt df=1). Recall \\(Cauchy(θ, η)\\) distribution density function \\[ f(x) = \\frac{1}{\\theta\\pi(1+[(x-\\eta)/\\theta]^2)}, -\\infty<x<\\infty,\\theta>0 \\] #### Solution 可以看出产生的分布和实际分布拟合的很好","code":"rm(list = ls()) library(knitr) # Causcht(theta,eta) set.seed(1145140)  Gelman.Rubin <- function(psi) {   # psi[i,j] 是 检验函数 psi(X[i,1:j])的值   # X的第i行为第i条链   psi <- as.matrix(psi)   n <- ncol(psi)   k <- nrow(psi)   psi.means <- rowMeans(psi) #所有行的平均值，链之间的平均   B <- n * var(psi.means) # 链之间的方差估计   psi.w <- apply(psi, 1, \"var\") #within variances   W <- mean(psi.w) #within est.   v.hat <- W*(n-1)/n + (B/n) #upper variance est.   r.hat <- v.hat / W #G-R statistic   return(r.hat) }  normal.chain<-function(N,theta,eta,X1){   x <- numeric(N)   x[1] <- X1   k <- 0   u <- runif(N)   for (i in 2:N) {   xt <- x[i-1]   y <- rnorm(1, xt)   shang <- df(y,theta=theta, eta=eta) * dnorm(xt, y)   xia <- df(xt, theta=theta, eta=eta) * dnorm(y, xt)   if (u[i] <= shang/xia) x[i] <- y       else {     x[i] <- xt     k <- k+1 #y 被拒绝     }   }   return(x) }   df <- function(x,theta,eta) {   stopifnot(theta > 0)   return(1 /(theta*pi*(1+((x-eta)/theta)^2) )) }  m <- 10000  #样本长度 b <- 1000 #去掉的长度 theta <- 1 eta <- 0 burn <- 1000   x0 <- c(-10,-5,1,2,5,10,15,20)  #设置初始值 K <- length(x0)  #产生链 X <- matrix(0,nrow = K,ncol=m) for (i in 1:K){   X[i,] <- normal.chain(m,theta,eta,x0[i])    }   index <- burn+1:m # 选择第3条链来进行绘图 xx <- X[3,] y1 <- xx[index]  #产生的MCMC  y2 <- rcauchy(length(y1), location = 0, scale = 1)  #cauchy产生的 par(mfrow = c(1,2)) plot(index, y1,type=\"l\",main=\"去掉前面1000个样本后的M-H链\", ylab=\"X\") hist(y1, probability = TRUE, breaks = 100,main=\"密度分布图\",xlab=\"X\")  plot.y1 <- seq(min(xx), max(xx), 0.01) lines(plot.y1, df(plot.y1,theta=theta, eta=eta),main=\"密度分布图\",xlab=\"X\") par(mfrow = c(1,1))  #psi <- t(apply(X, 1, cumsum)) #for (i in 1:nrow(psi)) psi[i,] <- psi[i,] / (1:ncol(psi))  paste(\"R=\",Gelman.Rubin(X))   rhat <- rep(0, m) for (j in (b+1):m){   rhat[j] <- Gelman.Rubin(X[,1:j]) } plot(rhat[(b+1):m], main = bquote(R),type=\"l\", xlab=\"\", ylab=\"R\") abline(h=1.1, lty=2)  ## 计算分位数  qmh <- c(1:K) qcau <- c(1:K) for (i in 1:K){   qmh[i] <- quantile(X[i,],c(0.1))   qcau[i] <- qcauchy(0.1, 0,1) } result <- cbind(qmh,qcau)  #合并计算结果 dimnames(result)[[2]] <- c(\"M-H 10%分位数\", \"标准柯西10%分位数\") #重命名各列 kable(result, caption = \"分位数对比\")"},{"path":"/articles/homework.html","id":"section-11","dir":"Articles","previous_headings":"The homework 7 2021-11-11 > Answer","what":"9.8","title":"homework","text":"example appears [40]. Consider bivariate density \\[ f(x,y) \\propto \\left( \\begin{array}{c} n \\\\ x \\end{array} \\right) y^{x+-1}(1-y)^{n-x+b-1} , x=0,1,...,n, 0\\leq y\\leq 1 \\] can shown (see e.g. [23]) fixed , b, n, conditional distributions \\(Binomial(n, y)\\) \\(Beta(x+ , n−x+ b)\\). Use Gibbs sampler generate chain target joint density \\(f(x, y)\\)","code":""},{"path":"/articles/homework.html","id":"solution-3","dir":"Articles","previous_headings":"The homework 7 2021-11-11 > Answer","what":"Solution","title":"homework","text":"\\[ f(X|Y) = Binomial(n,y) = \\left( \\begin{array}{c} n \\\\ x \\end{array} \\right) y^{x}(1-y)^{n-x} \\\\ E[X|Y] =  ny  \\\\ f(Y|X) = Beta(x+,n-x+b) = \\frac{\\Gamma(+n+b)}{\\Gamma(x+)\\Gamma(n-x+b)}y^{x+-1}(1-y)^{n-x+b-1} \\\\ E[Y|X] = \\frac{x+}{n++b}\\\\ \\]","code":"N <- 5000 #链的长度 burn <- 1000 #burn-in length  ###### Mode Parameter ##### n <- 50 a <- 1 b <- 2  ###### 产生链的函数 ##### bivariate.chain <- function(N,n,a,b,X1,Y1){   # N个数据点 参数 n,a,b,初值 X1,Y1   data <- list(X = matrix(0,1,N),Y=matrix(0,1,N)) #the chain, a bivariate sample   data$X[1] <- X1   data$Y[1] <- Y1   for ( i in 2:N){     x2 <- data$Y[i-1]     data$X[i] <- rbinom(1, n, x2)     x1 <- data$X[i]     data$Y[i] <- rbeta(1,x1+a,n-x1+b)   }   return(data) }    #每条链的初始值 x0 <- c(1,5,10,15,20,50,100) y0 <- c(0.01,0.05,0.1,0.2,0.5,0.7,0.9) K <- length(x0)  #几条链  #产生链 X <- matrix(0,K,N) Y <- matrix(0,K,N) for (i in 1:K){   data <- bivariate.chain(N,n,a,b,x0[i],y0[i])   X[i,] <- data$X   Y[i,] <- data$Y }    bs <- burn+1 index <- (burn+1):N x <- X[1,index] y <- Y[1,index]   plot(t(rbind(x,y)), main=\"联合密度分布图\", cex=.5, xlab=\"X\",ylab=\"Y\", ylim=range(y))  #产生的MCMC  par(mfrow = c(1,2)) plot(index, x,type=\"l\",main=\"X的去掉前面1000个样本后的Gibbs链\", ylab=\"X\") hist(x, probability = TRUE, breaks = 100,main=\"密度分布图\",xlab=\"X\") par(mfrow = c(1,1))  par(mfrow = c(1,2)) plot(index, y,type=\"l\",main=\"Y的去掉前面1000个样本后的Gibbs链\", ylab=\"Y\") hist(y, probability = TRUE, breaks = 100,main=\"密度分布图\",xlab=\"Y\") par(mfrow = c(1,1)) paste(\"Rx=\",Gelman.Rubin(X)) paste(\"Ry=\",Gelman.Rubin(Y))  #plot the sequence of R-hat statistics rhat <- rep(0, N) for (j in (b+1):N){   rhat[j] <- Gelman.Rubin(X[,1:j]) } plot(rhat[bs:N], type=\"l\", xlab=\"\", ylab=\"R\") abline(h=1.1, lty=2)   rhat <- rep(0, N) for (j in (b+1):N){   rhat[j] <- Gelman.Rubin(Y[,1:j]) } plot(rhat[bs:N], type=\"l\", xlab=\"\", ylab=\"R\") abline(h=1.1, lty=2)"},{"path":"/articles/homework.html","id":"supplement-1","dir":"Articles","previous_headings":"The homework 7 2021-11-11 > Answer","what":"Supplement","title":"homework","text":"exercise, use Gelman-Rubin method monitor convergence chain, run chain converges approximately target distribution according \\(\\hat{R} < 1.2\\)","code":""},{"path":"/articles/homework.html","id":"solution-4","dir":"Articles","previous_headings":"The homework 7 2021-11-11 > Answer","what":"Solution","title":"homework","text":"\\(\\hat{R}\\)的图已经在上面画出来了，都是小于1.2","code":""},{"path":[]},{"path":"/articles/homework.html","id":"question-6","dir":"Articles","previous_headings":"","what":"Question","title":"homework","text":"Exercises 1 5 (page 204, Advanced R) Excecises 1 7 (page 214, Advanced R)","code":""},{"path":[]},{"path":"/articles/homework.html","id":"section-12","dir":"Articles","previous_headings":"Answer","what":"11.1.2.1","title":"homework","text":"following two invocations lapply() equivalent? 因为\\(lapply(X,FUN,其他参数)\\)是返回一个与X长度相同的列表，飞哥元素都是将函数FUN作用应用于X的响应元素的结果 \\(mean(x,trim = ,na.rm = FALSE,...)\\) 其中x是数值向量，仅仅当\\(trim=0\\)时，复数向量才可以 \\(trim\\)是\\([0,0.5]\\)的比例系数 在计算均值之前，从x的两端去掉观测值的比例\\((0\\sim 0.5)\\) 在 \\(lapply(trims, function(trim) mean(x, trim = trim))\\)中 函数\\(mean\\)计算去掉两端trim的比例 ,其实 写成\\(lapply(trims, function(trim) mean(x, trim))\\) 结果是一样的 trim放在mean的参数列表前面，后面就要指定\\(x=data\\)即\\(mean(trim,x=x)\\) trim放在mean的参数列表后面，可以直接写成$mean(x,trim)","code":"set.seed(12315) trims <- c(0, 0.1, 0.2, 0.5) x <- rcauchy(100)  lapply(trims, function(trim) mean(x, trim = trim)) #> [[1]] #> [1] -3.520485 #>  #> [[2]] #> [1] 0.3194412 #>  #> [[3]] #> [1] 0.2229875 #>  #> [[4]] #> [1] 0.2166389 lapply(trims, mean, x = x) #> [[1]] #> [1] -3.520485 #>  #> [[2]] #> [1] 0.3194412 #>  #> [[3]] #> [1] 0.2229875 #>  #> [[4]] #> [1] 0.2166389 lapply(trims, function(trim) mean(x,trim)) #> [[1]] #> [1] -3.520485 #>  #> [[2]] #> [1] 0.3194412 #>  #> [[3]] #> [1] 0.2229875 #>  #> [[4]] #> [1] 0.2166389"},{"path":"/articles/homework.html","id":"section-13","dir":"Articles","previous_headings":"Answer","what":"11.1.2.5","title":"homework","text":"model previous two exercises, extract \\(R^2\\) using function . Use loops lapply() fit linear models mtcars using formulas stored list: Fit model mpg ~ disp bootstrap replicates mtcars list using loop lapply(). Can without anonymous function?","code":"rsq <- function(mod) summary(mod)$r.squared rm(list=ls())  formulas <- list( mpg ~ disp, mpg ~ I(1/disp), mpg ~ disp + wt, mpg ~ I(1/disp) + wt )  boot_df <- function(x){   return(x[sample(nrow(x), replace = TRUE), ]) }   rsq <- function(mod) {   summary(mod)$r.squared }  boot_lm <- function(formu){   dat <- boot_df(mtcars)   rsq(lm(formu,data = dat)) } #鐢╨apply()NA#lapply(formulas,lm,data = boot_df(mtcars))  lapply(formulas,boot_lm) #> [[1]] #> [1] 0.713614 #>  #> [[2]] #> [1] 0.8332219 #>  #> [[3]] #> [1] 0.7862372 #>  #> [[4]] #> [1] 0.9033778   #鐢╢orNAfor (i in 1:length(formulas)){   print(boot_lm(formulas[[i]])) } #> [1] 0.7077747 #> [1] 0.8725245 #> [1] 0.7980984 #> [1] 0.847342    #鍥犱负鐢ㄤ簡boot_strap鎵€浠ヤ袱涓粨鏋滀笉涓€鏍NA bootstraps <- lapply(1:10, function(i) { rows <- sample(1:nrow(mtcars), rep = TRUE) mtcars[rows, ] })  boot_mpg_disp <- function(dat){   rsq(lm(mpg~disp,data = boot_df(dat))) } #浣跨敤lapplyNAlapply(bootstraps, boot_mpg_disp) #> [[1]] #> [1] 0.6577088 #>  #> [[2]] #> [1] 0.6720489 #>  #> [[3]] #> [1] 0.8279625 #>  #> [[4]] #> [1] 0.7219773 #>  #> [[5]] #> [1] 0.82747 #>  #> [[6]] #> [1] 0.6864452 #>  #> [[7]] #> [1] 0.7065602 #>  #> [[8]] #> [1] 0.7104219 #>  #> [[9]] #> [1] 0.8389606 #>  #> [[10]] #> [1] 0.7787436  #浣跨敤for寰幆NAfor (i in 1:length(bootstraps)){   dat <- boot_df(bootstraps[[i]])   print(rsq(lm(mpg~disp,data = dat))) } #> [1] 0.6281573 #> [1] 0.6323042 #> [1] 0.8513368 #> [1] 0.685374 #> [1] 0.7451628 #> [1] 0.5596998 #> [1] 0.6752615 #> [1] 0.6448476 #> [1] 0.7364718 #> [1] 0.7855587"},{"path":"/articles/homework.html","id":"section-14","dir":"Articles","previous_headings":"Answer","what":"11.2.5.1","title":"homework","text":"Use vapply() : ) Compute standard deviation every column numeric data frame. b) Compute standard deviation every numeric column mixed data frame. (Hint: ’ll need use vapply() twice.)","code":"n <- 100 df <- data.frame(x = 1:n, y = rnorm(n,0,1)) vapply(df,sd,c(1)) #>          x          y  #> 29.0114920  0.9495975 n <- 100 df <- data.frame(x = rchisq(n,1), y = letters[1:10],z = rnorm(n,0,1))  vapply(df,function(dat){   if(is.numeric(dat)==TRUE){     return(sd(dat))   }   else{     return(NA)   } },c(1.2)) #>        x        y        z  #> 1.355592       NA 1.032777 #a <- vapply(df, class, character(1)) == \"numeric\"  #vapply(df,sd,c(1))"},{"path":"/articles/homework.html","id":"section-15","dir":"Articles","previous_headings":"Answer","what":"11.2.5.7","title":"homework","text":"Implement mcsapply(), multicore version sapply(). Can implement mcvapply(), parallel version vapply()? ? Windows上跑不了mc.cores","code":"library(parallel) #detectCores鍑芥暟鍙互鍛婅瘔浣犱綘鐨凜PU鍙娇鐢ㄧ殑鏍告暟NAdetectCores()   mcsapply <-function(x,Fun,...){   #cores 鎸囧畾璁＄畻鏍哥殑鏁伴噺NAmc <- getOption(\"mc.cores\", detectCores() )    res <- mclapply(x, fun, mc.cores = mc);   return(res) }   mcvapply <-function(x,Fun,cha,cores =4,...){   #cha鎸囧畾杩斿洖鐨勭被鍨<8b>NAmc <- getOption(\"mc.cores\", detectCores() )    res <- mclapply(x, fun, mc.cores = mc);    return(res) }  n <- 100 df <- data.frame(x = 1:n, y = rnorm(n,0,1)) mcsapply(df,sd)"},{"path":"/articles/intro.html","id":"simple-use","dir":"Articles","previous_headings":"","what":"Simple use","title":"intro","text":"","code":"library(StatComp21049) ## basic example code  data(\"curve_data\", \"time_Elapsed\", \"w\") ## you can use your data to Proceed to the steps below rec <- Downsample(time_Elapsed, curve_data, 16) time_downsampled <- rec$time_downsampled data_downsampled <- rec$data_downsampled ev <- Get_Matrix_Eigens(data_downsampled) eigenvalues <- ev$values eigenvectors <- ev$vectors PCAmode <- 5 K_delay <- 12 Xeigenvector <- eigenvectors[, 1:PCAmode] X_PCA <- data_downsampled %*% Xeigenvector test_CurveFilter_embeddingdelay <- Embedding_delay(X_PCA, PCAmode, K_delay) X <- test_CurveFilter_embeddingdelay %*% w ## Plot the projection plot(X[, 3], X[, 4], type = \"l\") plot(X[, 6], X[, 7], type = \"l\")"},{"path":[]},{"path":[]},{"path":"/articles/intro.html","id":"downsample","dir":"Articles","previous_headings":"","what":"Downsample","title":"intro","text":"function code use downsample data","code":"Downsample <- function(timeseq, dataseq, dft=16){   sizedata <- dim(dataseq)   m <- sizedata[1]   n <- sizedata[2]     dt <- diff(timeseq)   meanft <- mean(1./dt)   rfolde <- round(meanft/dft)     if(rfolde > 1){     T <- ceiling(m/rfolde)     time_downsampled <- numeric(T)     data_downsampled <- matrix(0,T,n)     for(i in 1:T){       time_downsampled[i] <- timeseq[4*i-3]       for(j in 1:n){         data_downsampled[i,j] <- dataseq[4*i-3,j]       }     }   }   else{     time_downsampled <- timeseq     data_downsampled <- dataseq    }   rec <- list(time_downsampled = time_downsampled,data_downsampled=data_downsampled)   return(rec) }"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rongkang Xiong. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Xiong R (2021). StatComp21049: calculate phase space worm movements. R package version 0.1.","code":"@Manual{,   title = {StatComp21049: To calculate the phase space of worm movements},   author = {Rongkang Xiong},   year = {2021},   note = {R package version 0.1}, }"},{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement earth@mail.ustc.edu.cn. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"/index.html","id":"statcomp21049","dir":"","previous_headings":"","what":"To calculate the phase space of worm movements","title":"To calculate the phase space of worm movements","text":"StatComp21049 R package developed present homework statistic computing course author 21049 Calculate Phase space worm behavior.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"To calculate the phase space of worm movements","text":"can install development version StatComp21049 GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"RongkangXiong/StatComp21049\",build_vignettes = TRUE)"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"To calculate the phase space of worm movements","text":"basic example shows solve common problem:","code":"library(StatComp21049) ## basic example code  data(\"curve_data\", \"time_Elapsed\", \"w\") ## you can use your data to Proceed to the steps below rec <- Downsample(time_Elapsed, curve_data, 16) time_downsampled <- rec$time_downsampled data_downsampled <- rec$data_downsampled ev <- Get_Matrix_Eigens(data_downsampled) eigenvalues <- ev$values eigenvectors <- ev$vectors PCAmode <- 5 K_delay <- 12 Xeigenvector <- eigenvectors[, 1:PCAmode] X_PCA <- data_downsampled %*% Xeigenvector test_CurveFilter_embeddingdelay <- Embedding_delay(X_PCA, PCAmode, K_delay) X <- test_CurveFilter_embeddingdelay %*% w ## Plot the projection plot(X[, 3], X[, 4], type = \"l\") plot(X[, 6], X[, 7], type = \"l\")"},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Rongkang Xiong Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/benchmarks.html","id":null,"dir":"Reference","previous_headings":"","what":"Benchmark R and Rcpp functions. — benchmarks","title":"Benchmark R and Rcpp functions. — benchmarks","text":"Use R package microbenchmark comp","code":""},{"path":[]},{"path":"/reference/curve_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data of the curve fillter for a worm — curve_data","title":"Example data of the curve fillter for a worm — curve_data","text":"line represents curvature 100 segments body moment Column represents curvature body ith segment time.","code":""},{"path":"/reference/curve_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data of the curve fillter for a worm — curve_data","text":"","code":"data(curve_data)"},{"path":"/reference/curve_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data of the curve fillter for a worm — curve_data","text":"Matrix 43,288 rows times 100 columns.","code":""},{"path":"/reference/curve_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example data of the curve fillter for a worm — curve_data","text":"http://www.wenlab.org/","code":""},{"path":[]},{"path":"/reference/Downsample.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to downsample the raw data — Downsample","title":"A function to downsample the raw data — Downsample","text":"Downsample time sequence data","code":""},{"path":"/reference/Downsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to downsample the raw data — Downsample","text":"","code":"Downsample(timeseq, dataseq, dft = 16)"},{"path":"/reference/Downsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to downsample the raw data — Downsample","text":"timeseq vector T*1 size unit (s) dataseq matrix T*N size dft downsample dfz (Hz)","code":""},{"path":"/reference/Downsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to downsample the raw data — Downsample","text":"list,contain $time_downsampled, $data_downsampled","code":""},{"path":"/reference/Downsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to downsample the raw data — Downsample","text":"","code":"if (FALSE) { data(\"curve_data\", \"time_Elapsed\") rec <- time_downsample(time_Elapsed, curve_data, 16) time_downsampled <- rec$time_downsampled data_downsampled <- rec$data_downsampled }"},{"path":"/reference/Embedding_delay.html","id":null,"dir":"Reference","previous_headings":"","what":"Embedding the data after PCA dimensionality reduction — Embedding_delay","title":"Embedding the data after PCA dimensionality reduction — Embedding_delay","text":"Embedding data PCA dimensionality reduction","code":""},{"path":"/reference/Embedding_delay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Embedding the data after PCA dimensionality reduction — Embedding_delay","text":"","code":"Embedding_delay(X, K_mode_dimension = 5, K_delay = 12)"},{"path":"/reference/Embedding_delay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Embedding the data after PCA dimensionality reduction — Embedding_delay","text":"X matrix T*N size K_mode_dimension dimensionality PCA dimensionality reduction K_delay delay time","code":""},{"path":"/reference/Embedding_delay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Embedding the data after PCA dimensionality reduction — Embedding_delay","text":"matrix","code":""},{"path":"/reference/Embedding_delay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Embedding the data after PCA dimensionality reduction — Embedding_delay","text":"","code":"if (FALSE) { data(\"curve_data\", \"time_Elapsed\", \"w\") ## you can use your data to Proceed to the steps below rec <- Downsample(time_Elapsed, curve_data, 16) time_downsampled <- rec$time_downsampled data_downsampled <- rec$data_downsampled ev <- Get_Matrix_Eigens(data_downsampled) eigenvalues <- ev$values eigenvectors <- ev$vectors PCAmode <- 5 K_delay <- 12 Xeigenvector <- eigenvectors[, 1:PCAmode] X_PCA <- data_downsampled %*% Xeigenvector test_CurveFilter_embeddingdelay <- Embedding_delay(X_PCA, PCAmode, K_delay) X <- test_CurveFilter_embeddingdelay %*% w ## Plot the projection plot(X[, 3], X[, 4], type = \"l\") plot(X[, 6], X[, 7], type = \"l\") }"},{"path":"/reference/foo.html","id":null,"dir":"Reference","previous_headings":"","what":"foo: A package for Calculate the phase space projection. — foo","title":"foo: A package for Calculate the phase space projection. — foo","text":"foo package provides three categories important functions: foo, bar baz.","code":""},{"path":"/reference/foo.html","id":"foo-functions","dir":"Reference","previous_headings":"","what":"Foo functions","title":"foo: A package for Calculate the phase space projection. — foo","text":"foo functions…","code":""},{"path":"/reference/Get_Matrix_Dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"A function that Calculates the dimension of the matrix — Get_Matrix_Dimension","title":"A function that Calculates the dimension of the matrix — Get_Matrix_Dimension","text":"Returns dimension matrix X","code":""},{"path":"/reference/Get_Matrix_Dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function that Calculates the dimension of the matrix — Get_Matrix_Dimension","text":"","code":"Get_Matrix_Dimension(X)"},{"path":"/reference/Get_Matrix_Dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function that Calculates the dimension of the matrix — Get_Matrix_Dimension","text":"X matrix  T*N size","code":""},{"path":"/reference/Get_Matrix_Dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function that Calculates the dimension of the matrix — Get_Matrix_Dimension","text":"number, dimension matrix X","code":""},{"path":"/reference/Get_Matrix_Dimension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function that Calculates the dimension of the matrix — Get_Matrix_Dimension","text":"","code":"if (FALSE) { X <- matrix(rnorm(200 * 100), 200, 100) ev <- Get_Matrix_Dimension(X) }"},{"path":"/reference/Get_Matrix_Eigens.html","id":null,"dir":"Reference","previous_headings":"","what":"A function that calculates matrix eigenvalues and eigenvectors — Get_Matrix_Eigens","title":"A function that calculates matrix eigenvalues and eigenvectors — Get_Matrix_Eigens","text":"Returns list eigenvalues eigenvectors matrix","code":""},{"path":"/reference/Get_Matrix_Eigens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function that calculates matrix eigenvalues and eigenvectors — Get_Matrix_Eigens","text":"","code":"Get_Matrix_Eigens(X)"},{"path":"/reference/Get_Matrix_Eigens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function that calculates matrix eigenvalues and eigenvectors — Get_Matrix_Eigens","text":"X matrix T*N size","code":""},{"path":"/reference/Get_Matrix_Eigens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function that calculates matrix eigenvalues and eigenvectors — Get_Matrix_Eigens","text":"list eigenvalues eigenvectors","code":""},{"path":"/reference/Get_Matrix_Eigens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function that calculates matrix eigenvalues and eigenvectors — Get_Matrix_Eigens","text":"","code":"if (FALSE) { X <- matrix(rnorm(200 * 100), 200, 100) ev <- Get_Matrix_Eigens(X) eigenvalues <- ev$values eigenvectors <- ev$vectors }"},{"path":"/reference/gibbsC.html","id":null,"dir":"Reference","previous_headings":"","what":"A Gibbs sampler using Rcpp — gibbsC","title":"A Gibbs sampler using Rcpp — gibbsC","text":"Gibbs sampler using Rcpp","code":""},{"path":"/reference/gibbsC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Gibbs sampler using Rcpp — gibbsC","text":"","code":"gibbsC(N, thin)"},{"path":"/reference/gibbsC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Gibbs sampler using Rcpp — gibbsC","text":"N length chain thin number Binomial(thin, y)","code":""},{"path":"/reference/gibbsC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A Gibbs sampler using Rcpp — gibbsC","text":"random sample size n","code":""},{"path":"/reference/gibbsC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A Gibbs sampler using Rcpp — gibbsC","text":"","code":"if (FALSE) { rnC <- gibbsC(1000,50) plot(rnC[1,],type='l') plot(rnC[2,],type='l') }"},{"path":"/reference/gibbsR.html","id":null,"dir":"Reference","previous_headings":"","what":"A Gibbs sampler using R — gibbsR","title":"A Gibbs sampler using R — gibbsR","text":"Gibbs sampler using R","code":""},{"path":"/reference/gibbsR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Gibbs sampler using R — gibbsR","text":"","code":"gibbsR(N, thin)"},{"path":"/reference/gibbsR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Gibbs sampler using R — gibbsR","text":"N length chain thin number Binomial(thin, y)","code":""},{"path":"/reference/gibbsR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A Gibbs sampler using R — gibbsR","text":"random sample size n","code":""},{"path":"/reference/gibbsR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A Gibbs sampler using R — gibbsR","text":"","code":"if (FALSE) { rnR <- gibbsR(100, 10) plot(rnR[1, ], type = \"l\") plot(rnR[2, ], type = \"l\") }"},{"path":"/reference/Plot_Matrix_Dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"A function that Plot the number of dimensions from a segment to a segment — Plot_Matrix_Dimension","title":"A function that Plot the number of dimensions from a segment to a segment — Plot_Matrix_Dimension","text":"Plot dimensions segment segment","code":""},{"path":"/reference/Plot_Matrix_Dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function that Plot the number of dimensions from a segment to a segment — Plot_Matrix_Dimension","text":"","code":"Plot_Matrix_Dimension(X = 100, Sstart = 1, Send = 100)"},{"path":"/reference/Plot_Matrix_Dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function that Plot the number of dimensions from a segment to a segment — Plot_Matrix_Dimension","text":"X matrix  T*N size Sstart Start segment Send end segment, 1< Sstart<= Send < 100","code":""},{"path":"/reference/Plot_Matrix_Dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function that Plot the number of dimensions from a segment to a segment — Plot_Matrix_Dimension","text":"number, dimension matrix X","code":""},{"path":"/reference/Plot_Matrix_Dimension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function that Plot the number of dimensions from a segment to a segment — Plot_Matrix_Dimension","text":"","code":"if (FALSE) { X <- Plot_Matrix_Dimension() }"},{"path":"/reference/time_Elapsed.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data of the time series for a worm — time_Elapsed","title":"Example data of the time series for a worm — time_Elapsed","text":"unit seconds.","code":""},{"path":"/reference/time_Elapsed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data of the time series for a worm — time_Elapsed","text":"","code":"data(time_Elapsed)"},{"path":"/reference/time_Elapsed.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data of the time series for a worm — time_Elapsed","text":"Matrix 43288*100.","code":""},{"path":"/reference/time_Elapsed.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example data of the time series for a worm — time_Elapsed","text":"http://www.wenlab.org/","code":""},{"path":[]},{"path":"/reference/w.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Projection matrix for a worm — w","title":"Example Projection matrix for a worm — w","text":"Example Projection matrix worm","code":""},{"path":"/reference/w.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Projection matrix for a worm — w","text":"","code":"data(w)"},{"path":"/reference/w.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Projection matrix for a worm — w","text":"Matrix 60*7","code":""},{"path":"/reference/w.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Projection matrix for a worm — w","text":"http://www.wenlab.org/","code":""},{"path":[]}]
